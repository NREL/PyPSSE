<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 9.0.0 (0)
 -->
<!-- Title: Entity Relationship Diagram Pages: 1 -->
<svg width="275pt" height="71pt"
 viewBox="0.00 0.00 274.50 70.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 66.5)">
<title>Entity Relationship Diagram</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-66.5 270.5,-66.5 270.5,4 -4,4"/>
<text text-anchor="middle" x="133.25" y="-5.95" font-family="Times New Roman,serif" font-size="9.00" fill="#a8a8a8">Created by erdantic v0.6.0 &lt;https://github.com/drivendataorg/erdantic&gt;</text>
<!-- pypsse.models.ApiPssePostRequest -->
<g id="node1" class="node">
<title>pypsse.models.ApiPssePostRequest</title>
<g id="a_node1"><a xlink:title="pypsse.models.ApiPssePostRequest&#10;&#10;Usage docs: https://docs.pydantic.dev/2.5/concepts/models/&#10;&#10;A base class for creating Pydantic models.&#10;&#10;Attributes:&#10; &#160;&#160;&#160;__class_vars__: The names of classvars defined on the model.&#10; &#160;&#160;&#160;__private_attributes__: Metadata about the private attributes of the model.&#10; &#160;&#160;&#160;__signature__: The signature for instantiating the model.&#10;&#10; &#160;&#160;&#160;__pydantic_complete__: Whether model building is completed, or if there are still undefined fields.&#10; &#160;&#160;&#160;__pydantic_core_schema__: The pydantic&#45;core schema used to build the SchemaValidator and SchemaSerializer.&#10; &#160;&#160;&#160;__pydantic_custom_init__: Whether the model has a custom `__init__` function.&#10; &#160;&#160;&#160;__pydantic_decorators__: Metadata containing the decorators defined on the model.&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.&#10; &#160;&#160;&#160;__pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;__args__, __origin__, __parameters__ in typing&#45;module generics. May eventually be replaced by these.&#10; &#160;&#160;&#160;__pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.&#10; &#160;&#160;&#160;__pydantic_post_init__: The name of the post&#45;init method for the model, if defined.&#10; &#160;&#160;&#160;__pydantic_root_model__: Whether the model is a `RootModel`.&#10; &#160;&#160;&#160;__pydantic_serializer__: The pydantic&#45;core SchemaSerializer used to dump instances of the model.&#10; &#160;&#160;&#160;__pydantic_validator__: The pydantic&#45;core SchemaValidator used to validate instances of the model.&#10;&#10; &#160;&#160;&#160;__pydantic_extra__: An instance attribute with the values of extra fields from validation when&#10; &#160;&#160;&#160;&#160;&#160;&#160;&#160;`model_config[&#39;extra&#39;] == &#39;allow&#39;`.&#10; &#160;&#160;&#160;__pydantic_fields_set__: An instance attribute with the names of fields explicitly set.&#10; &#160;&#160;&#160;__pydantic_private__: Instance attribute with the values of private attributes set on the model instance.&#10;">
<polygon fill="none" stroke="black" points="71.75,-40.5 71.75,-62.5 194.75,-62.5 194.75,-40.5 71.75,-40.5"/>
<text text-anchor="start" x="74.75" y="-47.2" font-family="Times New Roman,serif" font-weight="bold" font-size="14.00">ApiPssePostRequest</text>
<polygon fill="none" stroke="black" points="71.75,-18.5 71.75,-40.5 163.75,-40.5 163.75,-18.5 71.75,-18.5"/>
<text text-anchor="start" x="80.62" y="-24.2" font-family="Times New Roman,serif" font-size="14.00">project_name</text>
<polygon fill="none" stroke="black" points="163.75,-18.5 163.75,-40.5 194.75,-40.5 194.75,-18.5 163.75,-18.5"/>
<text text-anchor="start" x="172.5" y="-24.2" font-family="Times New Roman,serif" font-size="14.00">str</text>
</a>
</g>
</g>
</g>
</svg>
